Последовательность a1, a2, a3, …, an - 1, an называется пилообразной, если она удовлетворяет одному из следующих условий :
1)	a1 < a2 > a3 < … > an - 1 < an
2)	a1 > a2 < a3 > … < an - 1 > an

Дана числовая последовательность.Требуется определить длину самой длинной ее пилообразной непрерывной подпоследовательности.

Входные данные:
В первой строке входного файла INPUT.TXT записано натуральное число N – количество элементов последовательности.
Во второй строке файла через пробел записаны N элементов целочисленной последовательности{ ai }.Ограничения: N<106, | ai | < 32000.

Выходные данные:
В единственную строку выходного файла OUTPUT.TXT нужно вывести одно целое число — длину самой длиной непрерывной пилообразной подпоследовательности.

	#include <iostream>
	#include <fstream>
	#include <conio.h>		
	#include <stdio.h>		
	using namespace std;

	void main()					
	{
	setlocale(LC_ALL, "Rus");

	ifstream INPUT("INPUT.TXT");
	ofstream OUTPUT("OUTPUT.TXT");

	int N;
	INPUT >> N;
	int *Сhain = new int[N+3];
	int  Length = 1, n = 0, M_length = 0;
	int *Max_length = new int[N+3];

	cout << "Последовательность чисел:\n";
	
	for (int i = 0; i < N; i++)
	{
		INPUT >> Сhain[i];
		cout << Сhain[i] << " ";
	}
	
	Сhain[N + 1] = Сhain[N];
	Сhain[N + 2] = Сhain[N];
	
	cout << "\n";
	for (int i = 0; i < N; i++)
	{
		if (Сhain[i] < Сhain[i + 1])
		{
			if (Сhain[i + 1] > Сhain[i + 2])	
			{
				Length++;
			}
			else								
			{
				Max_length[n] = Length;
				Length = 1;
				n++;
			}
		}
	
		else
		{
			if (Сhain[i + 1] < Сhain[i + 2])	
			{
				Length++;
			}
			else								
			{
				Max_length[n] = Length;
				Length = 1;
				n++;
			}
		}}
	
	Max_length[n] = Length;
	Length = 1;
	n++;
	for (int i = 0; i < n; i++)
	{	
		if (Max_length[i] > M_length) M_length = Max_length[i];
	}
	cout << "\nМаксимальная длинна пилообразного участка = " << M_length << "\n";
	OUTPUT << M_length;
	system("pause");
	}	
